<div class="alert alert-success" role="alert">
    <p>Welcome to the instructor site</p>
</div>
<audio controls id="audioPlayer"  preload="auto" type="audio/mpeg" style="">
</audio>

<input id="groupId" type="hidden" value="{{groupid}}">

<div id="song-name"></div>
<div id="song-title"></div>
<img src="" id="song-image" alt="">
<ul id="playList" style="cursor: pointer">
    <li onClick="playMusic('assets/music/1.mp3', 'Basic Flow 75-105 bpm (FS4vol1)', '0', 1)">Basic Flow 75-105 bpm
        (FS4vol1)
    </li>
    <li onClick="playMusic('assets/music/2.mp3', 'Basic Cardio 125 bpm (FS3vol1)', '0', 1)">Basic Cardio 125 bpm
        (FS3vol1)
    </li>
    <li onClick="playMusic('assets/music/3.mp3', 'Basic Puls 130 bpm (FS2vol.1)', '0', 1)">Basic Puls 130 bpm
        (FS2vol.1)
    </li>
    <li onClick="playMusic('assets/music/4.mp3', 'Basic Pump 135 bpm (FS1vol.1)', '0', 1)">Basic Pump 135 bpm
        (FS1vol.1)
    </li>
    <button onclick="stopSong()">Stop playing</button>
    <br>

</ul>
<br>

<p>Volume</p>
<input type="range" id="volume" min="0" max="1" value="0.5" step="0.01" onclick="changeVolume()">
<br>
<p>Progress</p>
<input type="range" id="progress" min="0" max="100" value="0" step="0.01" onclick="changeProgress()">
<br>
<p>Pitch</p>
<input type="range" id="pitch" min="0.7" max="1.5" step="0.01" onclick="changePitch()">
<p id="pitchText"></p>
<br>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.0/socket.io.dev.js"></script>
<script type="application/javascript">
    const socket = io.connect('http://localhost:8000');

    let audioPlayer = document.getElementById('audioPlayer'),
            pitchControl = document.getElementById('pitch'),
            isMusicPlaying = false,
            groupId = $("#groupId").val()
    ;

    socket.on('connect', function() {
        const sessionID = socket.id; //
        let groupSession = {
            "groupId": groupId,
            "socketId": sessionID,
        }
        socket.emit('openInstructorSession', groupSession);
    });

    function sessionAlive() {
        socket.emit('musicSessionAlive', true);
    }

    function streamToMembers(data) {
        socket.emit('playMusic', data);
    }

    function stopMusic() {
        socket.emit('stopMusicStream',);
    }

    // listener for synchronization
    socket.on('startStream', function () {
        streamToMembers({
            src: audioPlayer.src,
            name: 'bleh',
            time_stamp: audioPlayer.currentTime,
            pitch: audioPlayer.playbackRate
        });
    });

    /* Adds Play and Pause button */
    var playing = true
    function stopSong() {
        const audioPlayer = document.getElementById("audioPlayer");
        audioPlayer.pause();
        audioPlayer.currentTime = 0;
        stopMusic();
    };

    function playMusic(src, name, time_stamp, pitch) {
        const audioPlayer = document.getElementById("audioPlayer");
        const musicPlayer = $("#audioPlayer");
        musicPlayer.attr('src', src);
        musicPlayer.attr('time_stamp', time_stamp);
        musicPlayer.attr('pitch', pitch);
        streamToMembers({
            src: src,
            name: name,
            time_stamp: time_stamp,
            pitch: pitch
        });
        audioPlayer.play()
    }

    function playPause() {
        const pp = document.querySelector('#play-pause'),
                song = document.querySelector('#audioPlayer')
        if (playing) {
            pp.textContent = "Pause"
            receiveData()
            song.play()
            playing = false
        } else {
            pp.innerHTML = "Play"
            song.pause()
            playing = true
        }
    }

    /* Pitch function */
    function updatePitch() {
        const pitch = document.querySelector('#pitch')
        pitch.value = document.querySelector('#audioPlayer').playbackRate
        document.querySelector('#pitchText').textContent = (pitch.value * 100).toFixed(0) + " %"
    }

    setInterval(updatePitch, 1000)

    function changePitch() {
        const song = document.getElementById('audioPlayer')
        const pitchBar = document.querySelector('#pitch')
        song.playbackRate = pitchBar.value
        console.log('current pitch: ', song.playbackRate)
        // playMusic(song.src.split("#")[0], "meh", song.currentTime, pitchBar.value)
        socket.emit('changePitch', pitchBar.value);
    }

    /* Update and Change audio progress. Adds audio progress controls */
    function updateProgress() {
        const progress = document.querySelector('#progress')
        progress.max = document.querySelector('#audioPlayer').duration
        progress.value = document.querySelector('#audioPlayer').currentTime
    }

    setInterval(updateProgress, 1000)

    function changeProgress() {
        const progress = document.querySelector('#progress')
        audioPlayer.currentTime = progress.value
        socket.emit('changePlaybackTime', progress.value);
    }

    /* Update and Change volume. Adds volume controls */
    function updateVolume() {
        const volume = document.querySelector('#volume')
        volume.value = document.querySelector('#audioPlayer').volume
    }

    setInterval(updateVolume, 1000)

    function changeVolume() {
        const song = document.querySelector('#audioPlayer')
        song.volume = document.querySelector('#volume').value
    }
</script>